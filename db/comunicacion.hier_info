|de10_lite
CLOCK_50 => reset_delay:reset.iCLK
CLOCK_50 => tx_data[0].CLK
CLOCK_50 => tx_data[1].CLK
CLOCK_50 => tx_data[2].CLK
CLOCK_50 => tx_data[3].CLK
CLOCK_50 => tx_data[4].CLK
CLOCK_50 => tx_data[5].CLK
CLOCK_50 => tx_data[6].CLK
CLOCK_50 => tx_data[7].CLK
CLOCK_50 => tx_ena.CLK
CLOCK_50 => ac_uart.CLK
CLOCK_50 => state_prev[0].CLK
CLOCK_50 => state_prev[1].CLK
CLOCK_50 => flag_ac.CLK
CLOCK_50 => sw_uart.CLK
CLOCK_50 => switches_prev[0].CLK
CLOCK_50 => switches_prev[1].CLK
CLOCK_50 => flag_sw.CLK
CLOCK_50 => bt_uart[0].CLK
CLOCK_50 => bt_uart[1].CLK
CLOCK_50 => flag_bt[0].CLK
CLOCK_50 => flag_bt[1].CLK
CLOCK_50 => spi_pll:pll.inclk0
CLOCK_50 => led_driver:led.iCLK
CLOCK_50 => uart:uartcom.clk
KEY[0] => reset_delay:reset.iRSTN
KEY[1] => ~NO_FANOUT~
GSENSOR_INT[0] => spi_ee_config:spi_config.iG_INT2
GSENSOR_INT[0] => led_driver:led.iG_INT2
GSENSOR_INT[1] => ~NO_FANOUT~
GSENSOR_SDI <> spi_ee_config:spi_config.SPI_SDIO
GSENSOR_SDO <> <UNC>
GSENSOR_CS_N << spi_ee_config:spi_config.oSPI_CSN
GSENSOR_SCLK << spi_ee_config:spi_config.oSPI_CLK
LEDR[0] << led_driver:led.oLED[0]
LEDR[1] << led_driver:led.oLED[1]
LEDR[2] << led_driver:led.oLED[2]
LEDR[3] << led_driver:led.oLED[3]
LEDR[4] << led_driver:led.oLED[4]
LEDR[5] << led_driver:led.oLED[5]
LEDR[6] << led_driver:led.oLED[6]
LEDR[7] << led_driver:led.oLED[7]
LEDR[8] << led_driver:led.oLED[8]
LEDR[9] << led_driver:led.oLED[9]
botones[0] => flag_bt.OUTPUTSELECT
botones[0] => flag_bt.OUTPUTSELECT
botones[0] => bt_uart.DATAB
botones[1] => flag_bt.OUTPUTSELECT
botones[1] => flag_bt.OUTPUTSELECT
botones[1] => bt_uart.DATAB
switches[0] => Equal0.IN1
switches[0] => Mux0.IN5
switches[0] => Mux1.IN5
switches[0] => Mux2.IN5
switches[0] => tx_data.DATAB
switches[0] => switches_prev[0].DATAIN
switches[1] => Equal0.IN0
switches[1] => Mux0.IN4
switches[1] => Mux1.IN4
switches[1] => Mux2.IN4
switches[1] => switches_prev[1].DATAIN
tx <> tx
display[0] << bcd7seg_sec:display7seg.display[0]
display[1] << bcd7seg_sec:display7seg.display[1]
display[2] << bcd7seg_sec:display7seg.display[2]
display[3] << bcd7seg_sec:display7seg.display[3]
display[4] << bcd7seg_sec:display7seg.display[4]
display[5] << bcd7seg_sec:display7seg.display[5]
display[6] << bcd7seg_sec:display7seg.display[6]
display[7] << bcd7seg_sec:display7seg.display[7]


|de10_lite|reset_delay:reset
iRSTN => oRST~reg0.PRESET
iRSTN => cont[0].ACLR
iRSTN => cont[1].ACLR
iRSTN => cont[2].ACLR
iRSTN => cont[3].ACLR
iRSTN => cont[4].ACLR
iRSTN => cont[5].ACLR
iRSTN => cont[6].ACLR
iRSTN => cont[7].ACLR
iRSTN => cont[8].ACLR
iRSTN => cont[9].ACLR
iRSTN => cont[10].ACLR
iRSTN => cont[11].ACLR
iRSTN => cont[12].ACLR
iRSTN => cont[13].ACLR
iRSTN => cont[14].ACLR
iRSTN => cont[15].ACLR
iRSTN => cont[16].ACLR
iRSTN => cont[17].ACLR
iRSTN => cont[18].ACLR
iRSTN => cont[19].ACLR
iRSTN => cont[20].ACLR
iCLK => oRST~reg0.CLK
iCLK => cont[0].CLK
iCLK => cont[1].CLK
iCLK => cont[2].CLK
iCLK => cont[3].CLK
iCLK => cont[4].CLK
iCLK => cont[5].CLK
iCLK => cont[6].CLK
iCLK => cont[7].CLK
iCLK => cont[8].CLK
iCLK => cont[9].CLK
iCLK => cont[10].CLK
iCLK => cont[11].CLK
iCLK => cont[12].CLK
iCLK => cont[13].CLK
iCLK => cont[14].CLK
iCLK => cont[15].CLK
iCLK => cont[16].CLK
iCLK => cont[17].CLK
iCLK => cont[18].CLK
iCLK => cont[19].CLK
iCLK => cont[20].CLK
oRST <= oRST~reg0.DB_MAX_OUTPUT_PORT_TYPE


|de10_lite|spi_pll:pll
areset => areset.IN1
inclk0 => sub_wire1[0].IN1
c0 <= altpll:altpll_component.clk
c1 <= altpll:altpll_component.clk


|de10_lite|spi_pll:pll|altpll:altpll_component
inclk[0] => spi_pll_altpll:auto_generated.inclk[0]
inclk[1] => spi_pll_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => spi_pll_altpll:auto_generated.areset
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|de10_lite|spi_pll:pll|altpll:altpll_component|spi_pll_altpll:auto_generated
areset => pll1.ARESET
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1


|de10_lite|spi_ee_config:spi_config
iRSTN => iRSTN.IN1
iSPI_CLK => iSPI_CLK.IN1
iSPI_CLK_OUT => iSPI_CLK_OUT.IN1
iG_INT2 => always1.IN1
oDATA_L[0] <= oDATA_L[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA_L[1] <= oDATA_L[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA_L[2] <= oDATA_L[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA_L[3] <= oDATA_L[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA_L[4] <= oDATA_L[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA_L[5] <= oDATA_L[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA_L[6] <= oDATA_L[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA_L[7] <= oDATA_L[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA_H[0] <= oDATA_H[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA_H[1] <= oDATA_H[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA_H[2] <= oDATA_H[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA_H[3] <= oDATA_H[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA_H[4] <= oDATA_H[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA_H[5] <= oDATA_H[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA_H[6] <= oDATA_H[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA_H[7] <= oDATA_H[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SPI_SDIO <> spi_controller:u_spi_controller.SPI_SDIO
oSPI_CSN <= spi_controller:u_spi_controller.oSPI_CSN
oSPI_CLK <= spi_controller:u_spi_controller.oSPI_CLK


|de10_lite|spi_ee_config:spi_config|spi_controller:u_spi_controller
iRSTN => spi_count[0].PRESET
iRSTN => spi_count[1].PRESET
iRSTN => spi_count[2].PRESET
iRSTN => spi_count[3].PRESET
iRSTN => spi_count_en.ACLR
iRSTN => oS2P_DATA[7]~reg0.ENA
iRSTN => oS2P_DATA[6]~reg0.ENA
iRSTN => oS2P_DATA[5]~reg0.ENA
iRSTN => oS2P_DATA[4]~reg0.ENA
iRSTN => oS2P_DATA[3]~reg0.ENA
iRSTN => oS2P_DATA[2]~reg0.ENA
iRSTN => oS2P_DATA[1]~reg0.ENA
iRSTN => oS2P_DATA[0]~reg0.ENA
iSPI_CLK => oS2P_DATA[0]~reg0.CLK
iSPI_CLK => oS2P_DATA[1]~reg0.CLK
iSPI_CLK => oS2P_DATA[2]~reg0.CLK
iSPI_CLK => oS2P_DATA[3]~reg0.CLK
iSPI_CLK => oS2P_DATA[4]~reg0.CLK
iSPI_CLK => oS2P_DATA[5]~reg0.CLK
iSPI_CLK => oS2P_DATA[6]~reg0.CLK
iSPI_CLK => oS2P_DATA[7]~reg0.CLK
iSPI_CLK => spi_count[0].CLK
iSPI_CLK => spi_count[1].CLK
iSPI_CLK => spi_count[2].CLK
iSPI_CLK => spi_count[3].CLK
iSPI_CLK => spi_count_en.CLK
iSPI_CLK_OUT => oSPI_CLK.DATAB
iP2S_DATA[0] => Mux0.IN14
iP2S_DATA[1] => Mux0.IN13
iP2S_DATA[2] => Mux0.IN12
iP2S_DATA[3] => Mux0.IN11
iP2S_DATA[4] => Mux0.IN10
iP2S_DATA[5] => Mux0.IN9
iP2S_DATA[6] => Mux0.IN8
iP2S_DATA[7] => Mux0.IN7
iP2S_DATA[8] => Mux0.IN6
iP2S_DATA[9] => Mux0.IN5
iP2S_DATA[10] => Mux0.IN4
iP2S_DATA[11] => Mux0.IN3
iP2S_DATA[12] => Mux0.IN2
iP2S_DATA[13] => Mux0.IN1
iP2S_DATA[14] => Mux0.IN0
iP2S_DATA[15] => always0.IN1
iP2S_DATA[15] => Mux0.IN15
iP2S_DATA[15] => SPI_SDIO.IN1
iSPI_GO => spi_count_en.OUTPUTSELECT
iSPI_GO => oSPI_CSN.DATAIN
oSPI_END <= WideNor0.DB_MAX_OUTPUT_PORT_TYPE
oS2P_DATA[0] <= oS2P_DATA[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oS2P_DATA[1] <= oS2P_DATA[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oS2P_DATA[2] <= oS2P_DATA[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oS2P_DATA[3] <= oS2P_DATA[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oS2P_DATA[4] <= oS2P_DATA[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oS2P_DATA[5] <= oS2P_DATA[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oS2P_DATA[6] <= oS2P_DATA[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oS2P_DATA[7] <= oS2P_DATA[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SPI_SDIO <> SPI_SDIO
oSPI_CSN <= iSPI_GO.DB_MAX_OUTPUT_PORT_TYPE
oSPI_CLK <= oSPI_CLK.DB_MAX_OUTPUT_PORT_TYPE


|de10_lite|led_driver:led
iRSTN => int2_count[0].ACLR
iRSTN => int2_count[1].ACLR
iRSTN => int2_count[2].ACLR
iRSTN => int2_count[3].ACLR
iRSTN => int2_count[4].ACLR
iRSTN => int2_count[5].ACLR
iRSTN => int2_count[6].ACLR
iRSTN => int2_count[7].ACLR
iRSTN => int2_count[8].ACLR
iRSTN => int2_count[9].ACLR
iRSTN => int2_count[10].ACLR
iRSTN => int2_count[11].ACLR
iRSTN => int2_count[12].ACLR
iRSTN => int2_count[13].ACLR
iRSTN => int2_count[14].ACLR
iRSTN => int2_count[15].ACLR
iRSTN => int2_count[16].ACLR
iRSTN => int2_count[17].ACLR
iRSTN => int2_count[18].ACLR
iRSTN => int2_count[19].ACLR
iRSTN => int2_count[20].ACLR
iRSTN => int2_count[21].ACLR
iRSTN => int2_count[22].ACLR
iRSTN => int2_count[23].PRESET
iRSTN => int2_d[0].ENA
iRSTN => int2_d[1].ENA
iCLK => int2_d[0].CLK
iCLK => int2_d[1].CLK
iCLK => int2_count[0].CLK
iCLK => int2_count[1].CLK
iCLK => int2_count[2].CLK
iCLK => int2_count[3].CLK
iCLK => int2_count[4].CLK
iCLK => int2_count[5].CLK
iCLK => int2_count[6].CLK
iCLK => int2_count[7].CLK
iCLK => int2_count[8].CLK
iCLK => int2_count[9].CLK
iCLK => int2_count[10].CLK
iCLK => int2_count[11].CLK
iCLK => int2_count[12].CLK
iCLK => int2_count[13].CLK
iCLK => int2_count[14].CLK
iCLK => int2_count[15].CLK
iCLK => int2_count[16].CLK
iCLK => int2_count[17].CLK
iCLK => int2_count[18].CLK
iCLK => int2_count[19].CLK
iCLK => int2_count[20].CLK
iCLK => int2_count[21].CLK
iCLK => int2_count[22].CLK
iCLK => int2_count[23].CLK
iDIG[0] => ~NO_FANOUT~
iDIG[1] => ~NO_FANOUT~
iDIG[2] => ~NO_FANOUT~
iDIG[3] => ~NO_FANOUT~
iDIG[4] => select_data.DATAB
iDIG[4] => select_data.DATAA
iDIG[5] => select_data.DATAB
iDIG[5] => select_data.DATAA
iDIG[5] => select_data[0].DATAB
iDIG[6] => select_data.DATAB
iDIG[6] => select_data.DATAA
iDIG[6] => select_data[1].DATAB
iDIG[7] => select_data.DATAB
iDIG[7] => select_data.DATAA
iDIG[7] => select_data[2].DATAB
iDIG[8] => select_data.OUTPUTSELECT
iDIG[8] => select_data.OUTPUTSELECT
iDIG[8] => select_data.OUTPUTSELECT
iDIG[8] => select_data.OUTPUTSELECT
iDIG[8] => select_data.OUTPUTSELECT
iDIG[8] => select_data.OUTPUTSELECT
iDIG[8] => select_data.OUTPUTSELECT
iDIG[8] => select_data.OUTPUTSELECT
iDIG[8] => select_data[3].DATAB
iDIG[9] => select_data.OUTPUTSELECT
iDIG[9] => select_data.OUTPUTSELECT
iDIG[9] => select_data.OUTPUTSELECT
iDIG[9] => select_data.OUTPUTSELECT
iDIG[9] => abs_select_high[3].OUTPUTSELECT
iDIG[9] => abs_select_high[2].OUTPUTSELECT
iDIG[9] => abs_select_high[1].OUTPUTSELECT
iDIG[9] => abs_select_high[0].OUTPUTSELECT
iDIG[9] => oLED.DATAB
iDIG[9] => oLED.DATAB
iDIG[9] => oLED.DATAB
iDIG[9] => oLED.DATAB
iDIG[9] => oLED.DATAB
iDIG[9] => oLED.DATAB
iDIG[9] => oLED.DATAB
iDIG[9] => oLED.DATAB
iDIG[9] => oLED.DATAB
iDIG[9] => oLED.DATAB
iDIG[9] => oLED.DATAB
iDIG[9] => oLED.DATAA
iDIG[9] => oLED.DATAB
iDIG[9] => oLED.DATAB
iDIG[9] => oLED.DATAB
iDIG[9] => oLED.DATAB
iDIG[9] => oLED.DATAB
iDIG[9] => oLED.DATAB
iDIG[9] => oLED.DATAB
iDIG[9] => oLED.DATAB
iDIG[9] => oLED.DATAB
iDIG[9] => oLED.DATAB
iDIG[9] => oLED.DATAB
iDIG[9] => oLED.DATAA
iG_INT2 => select_data[3].OUTPUTSELECT
iG_INT2 => select_data[2].OUTPUTSELECT
iG_INT2 => select_data[1].OUTPUTSELECT
iG_INT2 => select_data[0].OUTPUTSELECT
iG_INT2 => int2_d[0].DATAIN
oLED[0] <= oLED.DB_MAX_OUTPUT_PORT_TYPE
oLED[1] <= oLED.DB_MAX_OUTPUT_PORT_TYPE
oLED[2] <= oLED.DB_MAX_OUTPUT_PORT_TYPE
oLED[3] <= oLED.DB_MAX_OUTPUT_PORT_TYPE
oLED[4] <= oLED.DB_MAX_OUTPUT_PORT_TYPE
oLED[5] <= oLED.DB_MAX_OUTPUT_PORT_TYPE
oLED[6] <= oLED.DB_MAX_OUTPUT_PORT_TYPE
oLED[7] <= oLED.DB_MAX_OUTPUT_PORT_TYPE
oLED[8] <= oLED.DB_MAX_OUTPUT_PORT_TYPE
oLED[9] <= oLED.DB_MAX_OUTPUT_PORT_TYPE


|de10_lite|uart:uartcom
clk => tx~reg0.CLK
clk => tx_state.CLK
clk => tx_busy~reg0.CLK
clk => tx_buffer[0].CLK
clk => tx_buffer[1].CLK
clk => tx_buffer[2].CLK
clk => tx_buffer[3].CLK
clk => tx_buffer[4].CLK
clk => tx_buffer[5].CLK
clk => tx_buffer[6].CLK
clk => tx_buffer[7].CLK
clk => tx_buffer[8].CLK
clk => tx_buffer[9].CLK
clk => tx_count[0].CLK
clk => tx_count[1].CLK
clk => tx_count[2].CLK
clk => tx_count[3].CLK
clk => rx_error~reg0.CLK
clk => rx_data[0]~reg0.CLK
clk => rx_data[1]~reg0.CLK
clk => rx_data[2]~reg0.CLK
clk => rx_data[3]~reg0.CLK
clk => rx_data[4]~reg0.CLK
clk => rx_data[5]~reg0.CLK
clk => rx_data[6]~reg0.CLK
clk => rx_data[7]~reg0.CLK
clk => rx_buffer[0].CLK
clk => rx_buffer[1].CLK
clk => rx_buffer[2].CLK
clk => rx_buffer[3].CLK
clk => rx_buffer[4].CLK
clk => rx_buffer[5].CLK
clk => rx_buffer[6].CLK
clk => rx_buffer[7].CLK
clk => rx_buffer[8].CLK
clk => rx_state.CLK
clk => rx_busy~reg0.CLK
clk => rx_count[0].CLK
clk => rx_count[1].CLK
clk => rx_count[2].CLK
clk => rx_count[3].CLK
clk => os_count[0].CLK
clk => os_count[1].CLK
clk => os_count[2].CLK
clk => os_count[3].CLK
clk => os_pulse.CLK
clk => baud_pulse.CLK
clk => count_os[0].CLK
clk => count_os[1].CLK
clk => count_os[2].CLK
clk => count_os[3].CLK
clk => count_os[4].CLK
clk => count_baud[0].CLK
clk => count_baud[1].CLK
clk => count_baud[2].CLK
clk => count_baud[3].CLK
clk => count_baud[4].CLK
clk => count_baud[5].CLK
clk => count_baud[6].CLK
clk => count_baud[7].CLK
clk => count_baud[8].CLK
tx_ena => tx_buffer.OUTPUTSELECT
tx_ena => tx_buffer.OUTPUTSELECT
tx_ena => tx_buffer.OUTPUTSELECT
tx_ena => tx_buffer.OUTPUTSELECT
tx_ena => tx_buffer.OUTPUTSELECT
tx_ena => tx_buffer.OUTPUTSELECT
tx_ena => tx_buffer.OUTPUTSELECT
tx_ena => tx_buffer.OUTPUTSELECT
tx_ena => tx_buffer.OUTPUTSELECT
tx_ena => tx_buffer.OUTPUTSELECT
tx_ena => tx_count.OUTPUTSELECT
tx_ena => tx_count.OUTPUTSELECT
tx_ena => tx_count.OUTPUTSELECT
tx_ena => tx_count.OUTPUTSELECT
tx_ena => tx_state.DATAB
tx_ena => tx_busy~reg0.DATAIN
tx_data[0] => tx_buffer.DATAB
tx_data[1] => tx_buffer.DATAB
tx_data[2] => tx_buffer.DATAB
tx_data[3] => tx_buffer.DATAB
tx_data[4] => tx_buffer.DATAB
tx_data[5] => tx_buffer.DATAB
tx_data[6] => tx_buffer.DATAB
tx_data[7] => tx_buffer.DATAB
rx => rx_buffer.DATAA
rx => rx_buffer.DATAB
rx => os_count.OUTPUTSELECT
rx => os_count.OUTPUTSELECT
rx => os_count.OUTPUTSELECT
rx => os_count.OUTPUTSELECT
rx => rx_count.OUTPUTSELECT
rx => rx_count.OUTPUTSELECT
rx => rx_count.OUTPUTSELECT
rx => rx_count.OUTPUTSELECT
rx => rx_busy.OUTPUTSELECT
rx => rx_buffer.OUTPUTSELECT
rx => rx_buffer.OUTPUTSELECT
rx => rx_buffer.OUTPUTSELECT
rx => rx_buffer.OUTPUTSELECT
rx => rx_buffer.OUTPUTSELECT
rx => rx_buffer.OUTPUTSELECT
rx => rx_buffer.OUTPUTSELECT
rx => rx_buffer.OUTPUTSELECT
rx => rx_buffer.OUTPUTSELECT
rx => rx_error.IN1
rx_busy <= rx_busy~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_error <= rx_error~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[0] <= rx_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[1] <= rx_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[2] <= rx_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[3] <= rx_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[4] <= rx_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[5] <= rx_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[6] <= rx_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[7] <= rx_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_busy <= tx_busy~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx <= tx~reg0.DB_MAX_OUTPUT_PORT_TYPE


|de10_lite|bcd7seg_sec:display7seg
bcd[0] => Mux0.IN19
bcd[0] => Mux1.IN19
bcd[0] => Mux2.IN19
bcd[0] => Mux3.IN19
bcd[0] => Mux4.IN19
bcd[0] => Mux5.IN19
bcd[0] => Mux6.IN19
bcd[1] => Mux0.IN18
bcd[1] => Mux1.IN18
bcd[1] => Mux2.IN18
bcd[1] => Mux3.IN18
bcd[1] => Mux4.IN18
bcd[1] => Mux5.IN18
bcd[1] => Mux6.IN18
bcd[2] => Mux0.IN17
bcd[2] => Mux1.IN17
bcd[2] => Mux2.IN17
bcd[2] => Mux3.IN17
bcd[2] => Mux4.IN17
bcd[2] => Mux5.IN17
bcd[2] => Mux6.IN17
bcd[3] => Mux0.IN16
bcd[3] => Mux1.IN16
bcd[3] => Mux2.IN16
bcd[3] => Mux3.IN16
bcd[3] => Mux4.IN16
bcd[3] => Mux5.IN16
bcd[3] => Mux6.IN16
display[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
display[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
display[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
display[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
display[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
display[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
display[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
display[7] <= <VCC>


